name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Restore the version file
        id: restore-version-file
        uses: actions/cache@v2
        with:
          path: .n8n_version_next
          key: n8n-version-file

      - name: Fetch latest tag information from Docker Hub
        run: |
          echo "Fetching latest tag information from Docker Hub..."
          TAG_INFO=$(curl -s https://hub.docker.com/v2/repositories/n8nio/n8n/tags/next/)
          echo "Tag info: $TAG_INFO"
          LATEST_DIGEST=$(echo $TAG_INFO | jq -r '.images[] | select(.architecture=="amd64").digest')
          echo "LATEST_DIGEST=${LATEST_DIGEST}" >> $GITHUB_ENV
          echo "LATEST_DIGEST: $LATEST_DIGEST"

      - name: Compare current and latest digest
        run: |
          VERSION_FILE=".n8n_version_next"
          if [ -f "$VERSION_FILE" ]; then
            CURRENT_DIGEST=$(cat $VERSION_FILE)
          else
            CURRENT_DIGEST=""
          fi
          echo "CURRENT_DIGEST=${CURRENT_DIGEST}" >> $GITHUB_ENV
          echo "LATEST_DIGEST: $LATEST_DIGEST"
          echo "CURRENT_DIGEST: $CURRENT_DIGEST"

          if [ "$LATEST_DIGEST" = "$CURRENT_DIGEST" ]; then
            echo "The Docker Hub image digest matches the current stored digest. Skipping build and push."
            exit 0
          else
            echo "New digest detected. Proceeding with build and push..."
          fi

      - name: Build and push Docker image
        run: |
          # Pull the latest base image
          docker pull n8nio/n8n:next

          # Build the Docker image with the next base image
          docker build --pull --build-arg BUILD_VERSION=next -t python-n8n:next -f Dockerfile .

          # Store the new digest
          echo $LATEST_DIGEST > .n8n_version_next

          # Tag the local image
          docker tag python-n8n:next ${{ secrets.DOCKERHUB_USERNAME }}/python-n8n-github:next

          # Push the image to Docker Hub
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/python-n8n-github:next
          
      - name: Save new digest
        uses: actions/upload-artifact@v2
        with:
          name: n8n_version_next
          path: .n8n_version_next
